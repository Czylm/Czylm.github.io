<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎回家~</title>
  
  <subtitle>保持初衷，砥砺前行</subtitle>
  <link href="https://czylm.github.io/atom.xml" rel="self"/>
  
  <link href="https://czylm.github.io/"/>
  <updated>2023-12-07T11:38:10.723Z</updated>
  <id>https://czylm.github.io/</id>
  
  <author>
    <name>Czylm</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>起床困难综合症</title>
    <link href="https://czylm.github.io/2023/12/07/%E8%B5%B7%E5%BA%8A%E5%9B%B0%E9%9A%BE%E7%BB%BC%E5%90%88%E7%97%87/"/>
    <id>https://czylm.github.io/2023/12/07/%E8%B5%B7%E5%BA%8A%E5%9B%B0%E9%9A%BE%E7%BB%BC%E5%90%88%E7%97%87/</id>
    <published>2023-12-07T10:53:24.000Z</published>
    <updated>2023-12-07T11:38:10.723Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p>$–&gt;$ <a href = "https://www.acwing.com/problem/content/1000/"> 传送门</a></p><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>$drd$ 的防御战线由 $n$ 扇防御门组成。</p><p>每扇防御门包括一个运算 $op$ 和一个参数 $t$，其中运算一定是 $OR,XOR,AND$ 中的一种，参数则一定为非负整数。如果还未通过防御门时攻击力为 $x$，则其通过这扇防御门后攻击力将变为 $x$ $op$ $t$。</p><p>最终 $drd$ 受到的伤害为对方初始攻击力 $x$ 依次经过所有 $n$ 扇防御门后转变得到的攻击力。</p><p>由于 $atm$ 水平有限，他的初始攻击力只能为 $0$ 到 $m$ 之间的一个整数（即他的初始攻击力只能在 $0,1,…,m$ 中任选，但在通过防御门之后的攻击力不受 $m$ 的限制）。</p><p>为了节省体力，他希望通过选择合适的初始攻击力使得他的攻击能让 $drd$ 受到最大的伤害，请你帮他计算一下，他的一次攻击最多能使 $drd$ 受到多少伤害。</p><h2 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h2><p>$3$ $10$<br>$AND$ $5$<br>$OR$ $6$<br>$XOR$ $7$</p><h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h2><p>$1$</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>位运算的主要特点之一就是在二进制表示下不进位，因此，每一位是否为 $1$ 是独立的。__$ans$ 的第 $k$ 位只与 $x_o$ 的第 $k$ 位有关。__</p><p><strong>由此，我们从高位到低位依次考虑每一位填 $1$ 还是 $0$。</strong></p><p>这相当于在 $m$ 范围内造出一个符合条件的最大数字 $ans$，这就要 $ans$ 的每一位尽可能的为 $1$。而满足填 $1$ 的条件则是，<strong>已经填好更高位构成的数值加上当前第 $k$ 位的 $1 &lt;&lt; k$ 不超过 $m$，同时当前位置放 $1$ 的贡献大于放 $0$ 的</strong></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line">pair&lt;string,<span class="type">int</span>&gt; a[N];</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> bit,<span class="type">int</span> now)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n ; i ++)&#123;</span><br><span class="line"><span class="type">int</span> x = a[i].second &gt;&gt; bit &amp; <span class="number">1</span>;</span><br><span class="line">string str = a[i].first;</span><br><span class="line"><span class="keyword">if</span>(str == <span class="string">&quot;AND&quot;</span>) now &amp;= x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(str == <span class="string">&quot;OR&quot;</span>) now |= x;</span><br><span class="line"><span class="keyword">else</span> now ^= x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;  i &lt;= n; i ++)&#123;</span><br><span class="line">string s;<span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; s &gt;&gt; x;</span><br><span class="line">a[i] = &#123;s,x&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> val = <span class="number">0</span>,ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">29</span>; i &gt;= <span class="number">0</span> ; i --)&#123;</span><br><span class="line"><span class="type">int</span> res1 = <span class="built_in">cal</span>(i,<span class="number">1</span>),res0 = <span class="built_in">cal</span>(i,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(val + (<span class="number">1</span> &lt;&lt; i) &lt;= m &amp;&amp; res0 &lt; res1)&#123;</span><br><span class="line">ans += res1 &lt;&lt; i,val += <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> ans += res0 &lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h2&gt;&lt;p&gt;$–&amp;gt;$ &lt;a href = &quot;https://www.acwing.com/problem/content/1000</summary>
      
    
    
    
    <category term="算法竞赛" scheme="https://czylm.github.io/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/"/>
    
    
    <category term="二进制状态压缩" scheme="https://czylm.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客攻略</title>
    <link href="https://czylm.github.io/2023/12/07/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%94%BB%E7%95%A5/"/>
    <id>https://czylm.github.io/2023/12/07/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%94%BB%E7%95%A5/</id>
    <published>2023-12-07T06:16:42.000Z</published>
    <updated>2023-12-07T12:32:18.149Z</updated>
    
    <content type="html"><![CDATA[<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>从大一开始就一直想搭建自己的一个博客网站，但是直到现在才付诸行动，以此篇文章纪念一下。</p><h2 id="一、下载-git-和-Node-js"><a href="#一、下载-git-和-Node-js" class="headerlink" title="一、下载$git$ 和 $Node.js$"></a>一、下载$git$ 和 $Node.js$</h2><p><a href = "https://nodejs.org/en/" > $Node.js$ 传送门</a><br><img src="https://img-blog.csdnimg.cn/direct/c2781e4bf955490fb6f13353a16ae7e4.png" alt="在这里插入图片描述"><br>选这个即可<br><a href = "https://git-scm.com/" > $git$ 传送门</a></p><h2 id="二、安装-hexo"><a href="#二、安装-hexo" class="headerlink" title="二、安装$hexo$"></a>二、安装$hexo$</h2><h3 id="1-在非-C-盘新建一个文件夹-blog-，右键打开-git-bash"><a href="#1-在非-C-盘新建一个文件夹-blog-，右键打开-git-bash" class="headerlink" title="$1.$在非 $C$ 盘新建一个文件夹 $blog$，右键打开 $git bash$"></a>$1.$在非 $C$ 盘新建一个文件夹 $blog$，右键打开 $git bash$</h3><p><img src="/image.png" alt="Alt text"><br>输入</p><blockquote><p>npm install hexo-cli -g<br>npm install hexo-deployer-git –save&#x2F;&#x2F;部署插件，hexo d需要用到</p></blockquote><h3 id="2-在-git-创建文件-hexo"><a href="#2-在-git-创建文件-hexo" class="headerlink" title="$2.$在 $git$ 创建文件 hexo"></a>$2.$在 $git$ 创建文件 hexo</h3><blockquote><p>mkdir hexo</p></blockquote><h3 id="3-hexo初始化"><a href="#3-hexo初始化" class="headerlink" title="$3.$hexo初始化"></a>$3.$hexo初始化</h3><blockquote><p>hexo init</p></blockquote><h3 id="4-在-vscode-打开文件-hexo-的-config"><a href="#4-在-vscode-打开文件-hexo-的-config" class="headerlink" title="$4.$在 $vscode$ 打开文件 $hexo$ 的 $_config$"></a>$4.$在 $vscode$ 打开文件 $hexo$ 的 $_config$</h3><p><img src="/image-1.png" alt="Alt text"></p><h3 id="5-打开-config-，划到最下面，修改-repo"><a href="#5-打开-config-，划到最下面，修改-repo" class="headerlink" title="$5.$打开 _$config$，划到最下面，修改 $repo$"></a>$5.$打开 _$config$，划到最下面，修改 $repo$</h3><blockquote><p>deploy:<br>  type: ‘’<br>  repo: <a href="mailto:&#103;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#x63;&#111;&#109;">&#103;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#x63;&#111;&#109;</a>:你的用户名&#x2F;你的用户名.github.io.git<br>  branch: master</p></blockquote><h3 id="6-右键-hexo-文件用-git-打开，输入"><a href="#6-右键-hexo-文件用-git-打开，输入" class="headerlink" title="$6.$右键 $hexo$ 文件用 $git$ 打开，输入"></a>$6.$右键 $hexo$ 文件用 $git$ 打开，输入</h3><blockquote><p>hexo s</p></blockquote><p>本地加载完成<br><img src="/image-2.png" alt="Alt text"></p><h2 id="三、配置-git"><a href="#三、配置-git" class="headerlink" title="三、配置 $git$"></a>三、配置 $git$</h2><h3 id="1-在-git-新建库，注意格式"><a href="#1-在-git-新建库，注意格式" class="headerlink" title="$1.$在 $git$ 新建库，注意格式"></a>$1.$在 $git$ 新建库，注意格式</h3><p><img src="/image-4.png" alt="Alt text"><br>命名成</p><blockquote><p>你的用户名.github.io</p></blockquote><h3 id="2-然后在-git-上输入"><a href="#2-然后在-git-上输入" class="headerlink" title="$2.$然后在 $git$ 上输入"></a>$2.$然后在 $git$ 上输入</h3><blockquote><p>git config –global user.name “你的Github用户名”<br>git config –global user.email “你的Github邮箱”</p></blockquote><h3 id="3-生成密钥"><a href="#3-生成密钥" class="headerlink" title="$3.$生成密钥"></a>$3.$生成密钥</h3><blockquote><p>ssh-keygen -t rsa -C “你的Github邮箱”</p></blockquote><h3 id="4-查看密钥"><a href="#4-查看密钥" class="headerlink" title="$4.$查看密钥"></a>$4.$查看密钥</h3><blockquote><p>cat ~&#x2F;.ssh&#x2F;id_rsa.pub</p></blockquote><h3 id="5-复制粘贴到-github-里的-SSH"><a href="#5-复制粘贴到-github-里的-SSH" class="headerlink" title="$5.$复制粘贴到 $github$ 里的 $SSH$"></a>$5.$复制粘贴到 $github$ 里的 $SSH$</h3><p><img src="/image-3.png" alt="Alt text"></p><h3 id="6-建立连接"><a href="#6-建立连接" class="headerlink" title="$6.$建立连接"></a>$6.$建立连接</h3><blockquote><p>ssh -T <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#103;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a></p></blockquote><p>出现 </p><blockquote><p>Hi xxx! You’ve successfully authenticated…</p></blockquote><p>则成功链接</p><h3 id="7-在hexo打开的-git-上输入"><a href="#7-在hexo打开的-git-上输入" class="headerlink" title="$7.$在hexo打开的 $git$ 上输入"></a>$7.$在hexo打开的 $git$ 上输入</h3><blockquote><p>hexo clean<br>hexo g<br>hexo d<br>出现如图<br><img src="/image-5.png" alt="Alt text"></p></blockquote><p>等待一会，博客建立</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;从大一开始就一直想搭建自己的一个博客网站，但是直到现在才付诸行动，以此篇文章纪念一下。&lt;/p&gt;
&lt;h2 id=&quot;一、下载-git-和</summary>
      
    
    
    
    <category term="技术开发搭建" scheme="https://czylm.github.io/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="技术" scheme="https://czylm.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>白华</title>
    <link href="https://czylm.github.io/2023/12/06/%E7%99%BD%E5%8D%8E/"/>
    <id>https://czylm.github.io/2023/12/06/%E7%99%BD%E5%8D%8E/</id>
    <published>2023-12-06T13:31:37.000Z</published>
    <updated>2023-12-06T13:32:38.513Z</updated>
    
    <content type="html"><![CDATA[<p>以我的笔名<br>叙述新开始</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以我的笔名&lt;br&gt;叙述新开始&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
